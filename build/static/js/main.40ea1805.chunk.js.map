{"version":3,"sources":["components/navBar.jsx","components/customers.jsx","components/rentals.jsx","services/logService.js","services/httpService.js","services/movieService.js","components/pagination.jsx","utils/paginate.js","services/genreService.js","components/comon/listGroup.jsx","components/favourite.jsx","components/comon/tableHeader.jsx","components/comon/tableBody.jsx","components/comon/table.jsx","services/authServise.js","components/moviesTable.jsx","components/searchBox.jsx","components/movies.jsx","components/notFound.jsx","components/comon/input.jsx","components/comon/select.jsx","components/comon/form.jsx","components/loginForm.jsx","components/logout.jsx","services/userServise.js","components/registerForm.jsx","components/movieForm.jsx","components/comon/ProtectedRoute.jsx","App.js","reportWebVitals.js","index.js"],"names":["NavBar","user","class","Link","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","NavLink","className","Fragment","name","Customers","Rentals","init","log","error","console","axios","defaults","baseURL","process","interceptors","response","use","status","logger","toast","Promise","reject","get","post","put","delete","setJwt","jwt","headers","common","apiEndpoint","deleteMovie","movieId","http","getMovie","saveMovie","movie","_id","body","Pagination","props","itemsCount","pageSize","onPageChange","currentPage","pageCount","Math","ceil","pages","_","range","map","page","onClick","href","paginate","items","pageNumber","startIndex","slice","take","value","getGenres","ListGroup","textProperty","valueProperty","onItemSelect","selectedItem","item","defaultProps","Favourite","classes","liked","style","cursor","aria-hidden","TableHeader","raiseSort","path","sortColumn","order","onSort","renderSortIcon","column","this","columns","label","key","Component","TableBody","renderCell","content","createKey","data","Table","email","password","a","localStorage","setItem","getJwt","getItem","login","logout","removeItem","getCurrentUser","jwtDecode","ex","loginWithJwt","MoviesTable","title","onLike","deleteColumn","onDelete","auth","isAdmin","push","movies","SearchBox","onChange","placeholder","e","currentTarget","Movies","state","genres","selectedGenre","searchQuery","handleDelete","originalMovies","filter","setState","handleLike","m","index","indexOf","handlePageChange","handleGenreSelect","genre","handleSearch","query","handleSort","getPagedData","filtered","toLowerCase","startsWith","orderBy","totaCount","length","NotFound","Input","rest","htmlFor","Select","options","option","Form","errors","validate","Joi","schema","abortEarly","details","message","validateProperty","obj","handleChange","input","errorMsg","disabled","LoginForm","username","string","required","handleSubmit","preventDefault","doSubmit","location","window","from","pathname","onSubmit","renderInput","renderButton","Logout","register","RegisterForm","min","MovieForm","genreId","numberInStock","dailyRentalRate","number","max","mapToViewModel","history","match","params","replace","renderSelect","ProtectedRoute","component","render","Route","Redirect","App","Switch","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","BrowserRouter","document","getElementById"],"mappings":"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","file":"static/js/main.40ea1805.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Link, NavLink} from 'react-router-dom';\r\n\r\nconst NavBar = ({ user }) => {\r\n    return ( \r\n        <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n         <Link class=\"navbar-brand\" to=\"/\">Navbar</Link>\r\n        <button \r\n           class=\"navbar-toggler\" \r\n           type=\"button\" \r\n           data-toggle=\"collapse\" \r\n           data-target=\"#navbarNavAltMarkup\" \r\n           aria-controls=\"navbarNavAltMarkup\" \r\n           aria-expanded=\"false\" \r\n           aria-label=\"Toggle navigation\">\r\n           <span class=\"navbar-toggler-icon\"></span>\r\n       </button>\r\n       <div class=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\r\n       <div class=\"navbar-nav\">\r\n        <NavLink className=\"nav-item nav-link\" to=\"/movies\">  Movies</NavLink>\r\n        <NavLink className=\"nav-item nav-link\" to=\"/customers\">Customers</NavLink> \r\n        <NavLink className=\"nav-item nav-link\" to=\"/rentals\">Rentals</NavLink>\r\n        {!user && (\r\n        <React.Fragment>\r\n        <NavLink className=\"nav-item nav-link\" to=\"/login\">Login</NavLink>\r\n        <NavLink className=\"nav-item nav-link\" to=\"/register\">Register</NavLink>\r\n        </React.Fragment> \r\n        )}\r\n        {user && (\r\n        <React.Fragment>\r\n        <NavLink className=\"nav-item nav-link\" to=\"/profile\">{user.name}</NavLink>\r\n        <NavLink className=\"nav-item nav-link\" to=\"/logout\">Logout</NavLink>\r\n        </React.Fragment> \r\n        )}\r\n      </div>\r\n    </div> \r\n  </nav>  \r\n  \r\n     \r\n    \r\n    );\r\n}\r\n \r\nexport default NavBar;","import React from 'react';\r\n\r\nconst Customers = () => {\r\n    return (\r\n        <h1>Customers</h1>\r\n     );\r\n}\r\n \r\nexport default Customers;","import React from 'react';\r\n\r\nconst Rentals = () => {\r\n    return ( \r\n      <h1>Rentals</h1>\r\n     );\r\n}\r\n \r\nexport default Rentals;","\n\nfunction init() {\n}\n\nfunction log(error) {\n  console.error(error);\n}\n\nexport default {\n  init,\n  log\n};","import axios from \"axios\";\nimport logger from \"./logService\";\nimport { toast } from \"react-toastify\";\n\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\n\naxios.interceptors.response.use(null, error => {\n  const expectedError =\n    error.response &&\n    error.response.status >= 400 &&\n    error.response.status < 500;\n\n  if (!expectedError) {\n    // console.log(\"logging the error\", error);\n    // alert(\"An unexpected error occurred.\");\n    logger.log(error);\n    toast.error(\"An unexpected error occurred.\");\n  }\n\n  return Promise.reject(error);\n});\n\nfunction setJwt(jwt) {\n    //for authorisation: if the user is logged in he do wathever he wants else he can do nothing\n    axios.defaults.headers.common['x-auth-token'] = jwt; \n}\n\nexport default {\n  get: axios.get,\n  post: axios.post,\n  put: axios.put,\n  delete: axios.delete,\n  setJwt\n};","import http from \"./httpService\"\r\n\r\n\r\nconst apiEndpoint = \"/movies\";\r\n\r\nexport function getMovies() {\r\n    return http.get(apiEndpoint);\r\n  }\r\n\r\n\r\n  export function deleteMovie(movieId){\r\n    return http.delete(apiEndpoint+'/'+movieId);\r\n  }\r\n\r\n\r\n  export function getMovie(movieId){\r\n    return http.get(apiEndpoint+'/'+movieId);\r\n  }\r\n\r\n\r\n  export function saveMovie(movie){\r\n      if (movie._id){\r\n        const body= {...movie};\r\n        delete body._id;\r\n        return http.put(apiEndpoint+'/'+movie._id,body);\r\n      }\r\n      return http.post(apiEndpoint, movie);\r\n\r\n    \r\n  }","import React from 'react';\r\nimport _ from 'lodash';   \r\nimport propTypes from 'prop-types';  \r\n\r\n\r\nconst Pagination = (props) => {\r\n    const {itemsCount , pageSize ,onPageChange , currentPage} = props;\r\n    const pageCount = Math.ceil(itemsCount / pageSize);\r\n    if (pageCount === 1) return null;\r\n    const pages = _.range(1, pageCount+1);\r\n    return (\r\n        <nav>\r\n            <ul className=\"pagination\">\r\n                {pages.map( page => (\r\n                     <li key={page} className={page === currentPage ? \"page-item active\" : \"page-item\"}>\r\n                         <a className=\"page-link\" onClick={()=> onPageChange(page)} href=\"#\">{page}</a>\r\n                     </li>\r\n                ))}\r\n               \r\n            </ul>\r\n        </nav>\r\n    );\r\n}\r\n\r\nPagination.propTypes = {\r\n    itemsCount: propTypes.number.isRequired,\r\n    pageSize : propTypes.number.isRequired,\r\n    currentPage: propTypes.number.isRequired,\r\n    onPageChange: propTypes.func.isRequired\r\n};\r\n \r\nexport default Pagination;","import _ from \"lodash\";\r\n\r\nexport function paginate (items, pageNumber, pageSize) {\r\n    const startIndex = (pageNumber - 1)*pageSize;\r\n    //change the items to a lodash wraper so we can use it's methodes : slice and take\r\n    // we add .value at the end so we can convert the lodash chain to an array at the end\r\n    //this a paganation on the client side (fake server ) , paganation on the server is an entire other story\r\n    return _(items).slice(startIndex).take(pageSize).value();\r\n}","import http from \"./httpService\"\r\n\r\n\r\n\r\nexport function getGenres() {\r\n    return http.get(\"/genres\");\r\n  }","import React from 'react';\r\n\r\n//const ListGroup = (props) => {\r\n//    const {items, textProperty, valueProperty, onItemSelect, selectedItem}=props;\r\n// this is the same as the one below\r\n\r\nconst ListGroup = ({items, textProperty, valueProperty, onItemSelect, selectedItem}) => {\r\n    return(  \r\n    <ul className=\"list-group\">\r\n        {items.map (item =>\r\n              <li \r\n              onClick={() => onItemSelect(item)} \r\n              key={item[valueProperty]} \r\n              className={(item === selectedItem )? \"list-group-item list-group-item-info\": \"list-group-item\"}>\r\n                  {item[textProperty]}</li>\r\n              )}     \r\n    </ul>);\r\n}\r\n\r\nListGroup.defaultProps ={\r\n    textProperty: \"name\",\r\n    valueProperty: \"_id\"\r\n};\r\n \r\nexport default ListGroup;","import React from 'react';\r\nimport 'font-awesome/css/font-awesome.css'; \r\n\r\nconst Favourite = (props) => {\r\n    let classes=\"fa fa-heart\";\r\n        if (!props.liked)\r\n        classes+=\"-o\";\r\n        return ( <i \r\n            onClick={props.onClick} \r\n            class={classes} \r\n            style={ { cursor : \"pointer\"}}\r\n            aria-hidden=\"true\"></i>\r\n        );\r\n}\r\n \r\nexport default Favourite;","import React, { Component } from 'react';\r\n\r\n\r\nclass TableHeader extends Component {\r\n    raiseSort = path => {\r\n        const sortColumn = {...this.props.sortColumn}     ;\r\n              if (sortColumn.path === path)\r\n                sortColumn.order = (sortColumn.order === \"asc\") ? \"desc\" : \"asc\";\r\n              else {\r\n                sortColumn.path= path;\r\n                sortColumn.order=\"asc\";\r\n              }    \r\n         this.props.onSort(sortColumn);  \r\n      }\r\n\r\n    renderSortIcon = column => {\r\n        const {sortColumn}= this.props;\r\n        if (column.path !== sortColumn.path) return null;\r\n        if (sortColumn.order === \"asc\") return <i className=\"fa fa-sort-asc\"></i>\r\n        return <i className=\"fa fa-sort-desc\"></i>\r\n        \r\n    }\r\n       \r\n    render() { \r\n        return ( \r\n        <thead>\r\n            <tr>{this.props.columns.map (column => \r\n               <th className=\"clickable\" key={column.path || column.key} onClick={()=> this.raiseSort(column.path)}>\r\n                   {column.label} {this.renderSortIcon(column)}\r\n                   </th>)}</tr>\r\n        </thead> \r\n        );  \r\n    }\r\n}\r\n \r\nexport default TableHeader;","import React, { Component } from 'react';\r\nimport _ from \"lodash\";\r\nclass TableBody extends Component {\r\n    renderCell = (item, column)=> {\r\n        if (column.content) return column.content(item);\r\n\r\n        return _.get(item , column.path);\r\n\r\n    };\r\n\r\n    createKey = (item, column) => {\r\n       return item._id + (column.path || column.key);\r\n    };\r\n\r\n    render() { \r\n    const {data , columns}=this.props;\r\n        return ( <tbody>\r\n            {data.map(item =>  <tr key={item._id}>\r\n                {columns.map (column => <td key={this.createKey(item,column)}>{this.renderCell(item , column)}</td>)}\r\n                \r\n            </tr>\r\n            )}\r\n           \r\n        </tbody> );\r\n    }\r\n}\r\n \r\nexport default TableBody;","import React from 'react';\r\nimport TableHeader from \"./tableHeader\";\r\nimport TableBody from './tableBody';\r\n\r\n//const Table = props => {\r\n //   const {columns, data, onSort, sortColumn}= props;\r\n//that is the same as the one bellow\r\n\r\nconst Table =( {columns, data, onSort, sortColumn}) => {\r\n    \r\n\r\n    return (  <table className=\"table\">\r\n    <TableHeader columns={columns} sortColumn={sortColumn} onSort={onSort}/>\r\n    <TableBody data={data} columns={columns}/>      \r\n</table> );\r\n}\r\n \r\nexport default Table;","import http from \"./httpService\"\r\nimport jwtDecode from \"jwt-decode\";\r\n\r\nconst apiEndpoint = \"/auth\";\r\n\r\nhttp.setJwt(getJwt());\r\n\r\nexport async function login(email,password) {\r\n    const {data : jwt} = await http.post(apiEndpoint, {email,password });\r\n    localStorage.setItem('token',jwt);\r\n  }\r\n\r\nexport function loginWithJwt(jwt){\r\n    localStorage.setItem(\"token\",jwt)\r\n}\r\n\r\nexport function logout() {\r\n    localStorage.removeItem('token');\r\n}\r\n\r\nexport function getCurrentUser() {\r\n    try {\r\n        const jwt =  localStorage.getItem('token');  \r\n        return jwtDecode(jwt);\r\n      } catch (ex) {\r\n        return null;\r\n      }\r\n}\r\n\r\nexport function getJwt() {\r\n    return localStorage.getItem('token');\r\n}\r\n\r\nexport default {\r\n    login,\r\n    logout,\r\n    getCurrentUser,\r\n    loginWithJwt,\r\n    getJwt\r\n} ;\r\n","import React, { Component } from 'react';\r\nimport Favourite from \"./favourite\";\r\nimport Table from './comon/table';\r\nimport { Link } from 'react-router-dom';\r\nimport auth from '../services/authServise';\r\n\r\nclass MoviesTable extends Component {\r\n  columns = [ \r\n    {path : 'title', label:\"Title\", content : movie => <Link to={`/movies/${movie._id}`}>{movie.title}</Link>},\r\n    {path : 'genre.name', label:\"Genre\"},\r\n    {path : 'numberInStock', label:\"Stock\"},\r\n    {path : 'dailyRentalRate', label:\"Rate\"},\r\n    { key : 'like', content : movie => <Favourite liked={movie.liked} onClick={() => this.props.onLike(movie)}/> }\r\n    \r\n  ]\r\n\r\n  deleteColumn = { key: 'delete' , content: movie =>  \r\n  <button \r\n  onClick={ () => this.props.onDelete(movie._id)} \r\n  className=\"btn btn-danger\">\r\n    Delete\r\n  </button>  \r\n}\r\n\r\n  constructor() {\r\n    super();\r\n    const user = auth.getCurrentUser();\r\n    if (user && user.isAdmin)\r\n      this.columns.push(this.deleteColumn);\r\n  }\r\n \r\n\r\n  render() { \r\n    const {movies, onSort,sortColumn }=this.props;\r\n    return ( \r\n       <Table \r\n         columns={this.columns} \r\n         data={movies} \r\n         sortColumn={sortColumn} \r\n         onSort={onSort} />\r\n   );\r\n  }\r\n}\r\n \r\nexport default MoviesTable;","import React from 'react';\r\n\r\nconst SearchBox = ({value, onChange}) => {\r\n    return ( \r\n        <input\r\n          name=\"query\"\r\n          type=\"text\"\r\n          className=\"form-control my-3\"\r\n          placeholder=\"Search...\"\r\n          value={value}\r\n          onChange={e=> onChange(e.currentTarget.value)}\r\n        \r\n        />\r\n     );\r\n}\r\n \r\nexport default SearchBox;","import React, { Component } from 'react';\r\nimport {deleteMovie, getMovies} from \"../services/movieService\";\r\nimport Pagination from \"./pagination\";\r\nimport {paginate} from '../utils/paginate';\r\nimport { getGenres } from '../services/genreService';\r\nimport ListGroup from './comon/listGroup'\r\nimport MoviesTable from './moviesTable';\r\nimport _ from 'lodash';\r\nimport { Link } from 'react-router-dom';\r\nimport {toast} from \"react-toastify\";\r\nimport SearchBox from './searchBox';\r\n\r\n\r\n    class Movies extends Component {\r\n        state = {\r\n            movies : [],\r\n            genres : [],\r\n            selectedGenre: null,\r\n            currentPage : 1,\r\n            searchQuery:\"\",\r\n            selectedGenre: null,\r\n            pageSize:4,\r\n            sortColumn : { path : \"title\", order: \"asc\"}\r\n          };\r\n\r\n        async componentDidMount(){\r\n          const { data} = await getGenres();\r\n          const genres  = [{name : \"All Genres\", _id: ''},...data]\r\n          const {data:movies} = await getMovies();\r\n          this.setState({movies , genres});\r\n        };\r\n\r\n        handleDelete = async id => {\r\n             const originalMovies = this.state.movies;\r\n             const movies = originalMovies.filter(movie => movie._id !== id);\r\n             this.setState({movies});\r\n         try {\r\n             await deleteMovie(id);\r\n         } catch (ex) {\r\n            if (ex.response && ex.response.status === 404)\r\n                 toast.error(\"this movie has already been deleted.\");\r\n            this.setState({movies: originalMovies});\r\n         }\r\n            };\r\n\r\n        handleLike = (m) => {\r\n          const movies=[...this.state.movies];\r\n          const index = movies.indexOf(m);\r\n          movies[index].liked= !movies[index].liked;\r\n          this.setState({movies})\r\n\r\n        };\r\n\r\n        handlePageChange = page => {\r\n          this.setState({currentPage : page});\r\n        }\r\n\r\n        handleGenreSelect = genre => {\r\n          this.setState({selectedGenre : genre, searchQuery:\"\",currentPage:1});\r\n        }\r\n\r\n        handleSearch = query => {\r\n          this.setState({searchQuery: query , selectedGenre:null, currentPage:1});\r\n        }\r\n\r\n        handleSort = sortColumn => {\r\n          this.setState({sortColumn});\r\n        }\r\n        \r\n       getPagedData = () => {\r\n        const {pageSize, currentPage, selectedGenre, sortColumn, searchQuery}= this.state;\r\n         \r\n         let filtered=this.state.movies;\r\n         if (searchQuery)\r\n          filtered=this.state.movies.filter(m=>\r\n            m.title.toLowerCase().startsWith(searchQuery.toLowerCase()) );\r\n        else if (selectedGenre && selectedGenre._id )\r\n         filtered=this.state.movies.filter(m => m.genre._id === selectedGenre._id) ;\r\n        \r\n         const sorted=_.orderBy(filtered, [sortColumn.path], [sortColumn.order])\r\n         const movies = paginate(sorted, currentPage, pageSize);\r\n         return { totaCount : filtered.length, data:movies}\r\n       };\r\n\r\n\r\n        render() { \r\n          const {pageSize, currentPage, selectedGenre}= this.state;\r\n            \r\n          const {totaCount, data:movies} = this.getPagedData(); \r\n          const {user} = this.props;\r\n\r\n          return (\r\n            <div>\r\n               {(this.state.movies.length === 0 ) ?\r\n                   <div>\r\n                     <Link className=\"btn btn-primary m-2\" to=\"/movies/new\">New Movie</Link>\r\n                     <h2>There are no movies in the databases. </h2> \r\n                   </div>\r\n                   :\r\n                <div>\r\n                  <div className=\"row\">\r\n                   <div className=\"col-3\">\r\n                    <ListGroup \r\n                      items={this.state.genres} \r\n                      onItemSelect={this.handleGenreSelect} \r\n                      selectedItem={selectedGenre}\r\n                     />\r\n                    </div>\r\n                    <div className=\"col\">\r\n                      {user && (\r\n                        <Link \r\n                        className=\"btn btn-primary m-2\" \r\n                        to=\"/movies/new\">\r\n                          New Movie\r\n                      </Link>\r\n                      ) }\r\n                      \r\n                      <h2>Showing {totaCount} in the Data</h2>\r\n                      <SearchBox value={this.state.searchQuery} onChange={this.handleSearch}/>\r\n                       <MoviesTable \r\n                         movies={movies} \r\n                         sortColumn={this.state.sortColumn}\r\n                         onDelete={this.handleDelete}\r\n                         onLike={this.handleLike}\r\n                         onSort={this.handleSort}/>\r\n              \r\n                       <Pagination \r\n                         itemsCount={totaCount} \r\n                         pageSize={pageSize} \r\n                         currentPage={currentPage}\r\n                         onPageChange={this.handlePageChange} />\r\n                     </div>\r\n                  </div >\r\n                </div>\r\n                   }\r\n            </div>\r\n          );\r\n\r\n    \r\n                   \r\n\r\n        }\r\n    }\r\n     \r\n    export default Movies;\r\n    ","import React from 'react';\r\n\r\nconst NotFound = () => {\r\n    return (  \r\n        <h1>\r\n            Not Found\r\n        </h1>\r\n    );\r\n}\r\n \r\nexport default NotFound;","import React from 'react';\r\n\r\n\r\nconst Input = ({name,label,error,...rest}) => {\r\n    return ( \r\n        <div className=\"form-group\">\r\n                        <label htmlFor={name}>{label}</label>\r\n                        <input {...rest}\r\n                               id={name} \r\n                               name={name}\r\n                               className=\"form-control\"/>\r\n                        {error && <div className=\"alert alert-danger\">{error}</div>}\r\n                    </div>\r\n     );\r\n}\r\n \r\nexport default Input;","import React from 'react';\r\n\r\n\r\nconst Select = ({name,label,options,error,...rest}) => {\r\n    return ( \r\n        <div className=\"form-group\">\r\n                        <label htmlFor={name}>{label}</label>\r\n                        <select {...rest}\r\n                               id={name} \r\n                               name={name}\r\n                               className=\"form-control\">\r\n                        \r\n                                   {options.map(option => \r\n                                    <option key={option._id} value={option._id}>\r\n                                        {option.name}\r\n                                    </option>)}\r\n                        </select>                               \r\n                        {error && <div className=\"alert alert-danger\">{error}</div>}\r\n                    </div>\r\n     );\r\n}\r\n \r\nexport default Select;","import React, { Component } from 'react';\r\nimport Joi from 'joi-browser';\r\nimport Input from './input';\r\nimport Select from './select';\r\n\r\nclass Form extends Component {\r\n    state = { \r\n        data : {},\r\n        errors : {}\r\n     }\r\n\r\n     validate = () => {\r\n        const options =  {abortEarly : false}; \r\n        const {error} =Joi.validate(this.state.data , this.schema ,options);\r\n        if (!error) return null;\r\n        const errors = {};\r\n        for (let item of error.details) errors[item.path[0]]=item.message;\r\n        return errors;        \r\n    }\r\n\r\n    validateProperty = ({name, value})=> {\r\n        const obj ={[name] : value};\r\n        const schema = {[name]: this.schema[name]};\r\n        const {error} = Joi.validate(obj, schema);\r\n        return error ? error.details[0].message : null;\r\n       \r\n    }\r\n\r\n    handleChange =({ currentTarget : input}) => { //here we are renaming (destructering)  e.currentTarget to input\r\n        const errors = {...this.setState.errors};\r\n        const errorMsg = this.validateProperty(input); \r\n        // input.name = currentTarger.name = username or password  \r\n        if (errorMsg) errors[input.name]=errorMsg;\r\n        else delete errors[input.name];\r\n  \r\n        const data = {...this.state.data};\r\n        data[input.name]= input.value;\r\n        this.setState({data, errors});\r\n      }\r\n\r\n    renderButton(label) {\r\n        return <button disabled={this.validate()} className=\"btn btn-primary\">{label}</button> ;\r\n\r\n    }\r\n\r\n    renderSelect (name,label,options) {\r\n        const {data,errors} = this.state;\r\n        return <Select\r\n          name={name} \r\n          label={label}\r\n          value={data[name]} \r\n          onChange={this.handleChange} \r\n          error={errors[name]}\r\n          options={options}\r\n          />;\r\n    }\r\n    \r\n   \r\n    renderInput(name,label,type) {\r\n        const {data,errors} = this.state;\r\n        return <Input \r\n          name={name} \r\n          label={label}\r\n          value={data[name]} \r\n          onChange={this.handleChange} \r\n          error={errors[name]}\r\n          type={type}\r\n          />;\r\n    }\r\n\r\n \r\n}\r\n \r\nexport default Form;","import React from 'react';\r\nimport Joi from 'joi-browser';\r\nimport Form from './comon/form';\r\nimport auth from '../services/authServise'; \r\n\r\nclass LoginForm extends Form {\r\n    state = {\r\n        data : {\r\n            username :'',\r\n            password : ''\r\n        },\r\n        errors : {}\r\n    }\r\n\r\n    schema = {\r\n        username : Joi.string().required().label(\"Username\"),\r\n        password : Joi.string().required().label('Password')\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        const errors = this.validate();\r\n        this.setState({errors : errors || {}});\r\n        this.doSubmit();\r\n        \r\n   };\r\n\r\n   doSubmit = async () => {\r\n    try {\r\n        await auth.login(this.state.data.username,this.state.data.password);  \r\n        const {state} =this.props.location;\r\n        window.location= state ? state.from.pathname : '/';\r\n\r\n    } catch (ex) {\r\n        if (ex.response && ex.response.status === 400 ){\r\n            const errors = {...this.state.errors};\r\n            errors.username= ex.response.data;\r\n            this.setState({errors});\r\n        }        \r\n    }\r\n    \r\n   }\r\n\r\n    render() { \r\n      \r\n        return ( \r\n            <div>\r\n                <h1>Login</h1>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    {this.renderInput(\"username\",\"Username\")}\r\n                    {this.renderInput(\"password\",\"Password\",\"password\")}\r\n                    {this.renderButton(\"Login\")}\r\n    \r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default LoginForm;\r\n\r\n","import React, { Component } from 'react';\r\nimport auth from '../services/authServise'\r\n\r\n\r\nclass Logout extends Component {\r\n\r\n    componentDidMount () {\r\n        auth.logout();\r\n        window.location='/';\r\n    }\r\n\r\n    render() { \r\n        return null;\r\n    }\r\n}\r\n\r\n\r\n \r\nexport default Logout;","import http from \"./httpService\"\r\n\r\nconst apiEndpoint = \"/users\";\r\n\r\nexport function register(user) {\r\n    return http.post(apiEndpoint,\r\n        {\r\n            email : user.email,\r\n            password : user.password,\r\n            name : user.name\r\n        });\r\n  }\r\n","import React from 'react';\r\nimport Form from \"./comon/form\";\r\nimport Joi from 'joi-browser';\r\nimport {register} from '../services/userServise'; \r\nimport auth from '../services/authServise'; //importing an object\r\n\r\n\r\n\r\nclass RegisterForm  extends Form {\r\n    state = {\r\n        data : {\r\n            email :'',\r\n            password : '',\r\n            name : ''\r\n        },\r\n        errors : {}\r\n    }\r\n\r\n    schema = {\r\n        email : Joi.string().email().required().label(\"Email\"),\r\n        password : Joi.string().min(5).required().label('Password'),\r\n        name : Joi.string().required().label(\"Username\")\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        const errors = this.validate();\r\n        this.setState({errors : errors || {}});\r\n        this.doSubmit();\r\n        \r\n   };\r\n\r\n   doSubmit = async () => {\r\n    try {\r\n    const response =  await register(this.state.data);\r\n    auth.loginWithJwt(response.headers['x-auth-token']);\r\n    window.location='/';\r\n    } catch (ex) {\r\n       if (ex.response && ex.response.status === 400 ) {\r\n        const errors={...this.state.errors};\r\n        errors.email = ex.response.data;\r\n        this.setState({errors});\r\n       }\r\n    } \r\n   }\r\n\r\n    render() { \r\n        return ( \r\n            <div>\r\n                <h1>Register</h1>\r\n                <form onSubmit={this.handleSubmit}>\r\n                 {this.renderInput(\"email\",\"Email\")}\r\n                 {this.renderInput(\"password\",\"Password\",\"password\")}\r\n                 {this.renderInput(\"name\",\"Name\")}\r\n                 {this.renderButton(\"Register\")}\r\n                </form>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default RegisterForm ;","import React from 'react';\r\nimport Form from './comon/form';\r\nimport Joi from 'joi-browser';\r\nimport { getGenres } from './../services/genreService';\r\nimport { getMovie, saveMovie } from '../services/movieService';\r\n\r\n\r\nclass MovieForm extends Form {\r\n    state = {\r\n        data : {\r\n            title : '',\r\n            genreId : '',\r\n            numberInStock : '',\r\n            dailyRentalRate : ''\r\n        },\r\n        genres : [],\r\n        errors : {}\r\n    }\r\n\r\n    schema = {\r\n        _id : Joi.string(),\r\n        title : Joi.string().required().label(\"Title\"),\r\n        genreId : Joi.string().required().label('Genre'),\r\n        numberInStock : Joi.number().min(0).max(100).required().label(\"Number in Stock\"),\r\n        dailyRentalRate : Joi.number().min(0).max(10).required().label(\"Daily Rental Rate\")           \r\n    }\r\n\r\n\r\n    async componentDidMount (){\r\n        //populate genre\r\n        const { data:genres}= await getGenres();\r\n        this.setState({genres});\r\n\r\n        //populate movie\r\n\r\n        const movieId= this.props.match.params.id;\r\n        if (!movieId) return;\r\n\r\n        try {\r\n            const { data: movie}= await getMovie(movieId);\r\n            this.setState({data : this.mapToViewModel(movie)})\r\n        } catch (ex) {\r\n            if (ex.response && ex.response.status=== 404)\r\n              return this.props.history.replace(\"/not-found\");\r\n        }\r\n        \r\n        \r\n        \r\n    }\r\n\r\n    mapToViewModel = (movie) => {\r\n        return {\r\n            _id: movie._id,\r\n            title : movie.title,\r\n            genreId : movie.genre._id,\r\n            numberInStock : movie.numberInStock,\r\n            dailyRentalRate : movie.dailyRentalRate\r\n        }\r\n    }\r\n\r\n     \r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        const errors = this.validate();\r\n        this.setState({errors : errors || {}});\r\n        this.doSubmit();\r\n        \r\n   };\r\n\r\n   doSubmit = async () => {\r\n       \r\n     await saveMovie(this.state.data);\r\n     this.props.history.push(\"/movies\");\r\n   }\r\n\r\n    render() { \r\n        return ( \r\n            <div>\r\n                <h1>Movie Form</h1>\r\n                <form onSubmit={this.handleSubmit}>\r\n                 {this.renderInput(\"title\",\"Title\")}\r\n                 {this.renderSelect(\"genreId\",\"Genre\",this.state.genres)}\r\n                 {this.renderInput(\"numberInStock\",\"Number in Stock\")}\r\n                 {this.renderInput(\"dailyRentalRate\",\"Rate\")}\r\n                 {this.renderButton(\"Save\")}\r\n                </form>\r\n               \r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default MovieForm;","import React, { Component } from 'react';\r\nimport auth from \"../../services/authServise\"\r\nimport  {Route, Redirect} from 'react-router-dom';  \r\n\r\nconst ProtectedRoute = ({path, component: Component, render,...rest}) => {\r\n    return ( \r\n      <Route \r\n        {...rest}\r\n        render={props => {\r\n         if (!auth.getCurrentUser()) return <Redirect to={{\r\n          pathname: \"/login\",\r\n          state : { from : props.location}\r\n      }}\r\n          />;\r\n         return Component ? <Component {...props} /> : render(props);\r\n       }}\r\n        /> );\r\n}\r\n \r\nexport default ProtectedRoute;","import React, { Component } from 'react';\nimport {ToastContainer} from \"react-toastify\";\nimport NavBar from './components/navBar';\nimport {Route, Switch,Redirect} from 'react-router-dom';\nimport Customers from './components/customers';\nimport Rentals from './components/rentals';\nimport Movies from './components/movies';\nimport NotFound from './components/notFound';   \nimport LoginForm from './components/loginForm';\nimport Logout from './components/logout';\nimport RegisterForm from './components/registerForm';\nimport MovieForm from './components/movieForm';\nimport ProtectedRoute from './components/comon/ProtectedRoute';\nimport auth from './services/authServise';\nimport \"react-toastify/dist/ReactToastify.css\";\nimport './App.css';\n\n\n\nclass App extends Component {\n  state = {  };\n\n  componentDidMount() {\n    const user= auth.getCurrentUser();\n    this.setState({user});\n  }\n\n  render() {\n    const {user} = this.state; \n    return (\n      <React.Fragment>\n        <ToastContainer/>\n        <NavBar user={this.state.user}/>\n      <main className=\"container\">         \n       <Switch>\n        <ProtectedRoute path=\"/movies/new\" component={MovieForm} /> \n        <Route path=\"/register\" component={RegisterForm}/>\n        <Route path=\"/login\" component={LoginForm}/>\n        <Route path=\"/logout\" component={Logout}/>\n        <ProtectedRoute path=\"/movies/:id\" component={MovieForm}/>\n        <Route path=\"/movies\" \n         render={props => <Movies {...props} user={this.state.user}/>}></Route>\n        <Route path=\"/customers\" component={Customers}></Route>\n        <Route path=\"/rentals\" component={Rentals}></Route>\n        <Route path=\"/not-found\" component={NotFound}></Route>\n        <Redirect from=\"/\" exact to=\"/movies\"></Redirect>\n        <Redirect to=\"/not-found\"/>\n        </Switch>\n     </main>\n     </React.Fragment>\n   ); \n  }\n}\n \n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'font-awesome/css/font-awesome.css'; \nimport {BrowserRouter} from 'react-router-dom';\n\n\n\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}